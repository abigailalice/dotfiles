# ln -s $THISFILE ~/.tmux.conf
#
# Replace the existing .tmux.conf file with this single command, replacing
# $DOTFILES with the directory you keep your dotfiles under. this is useful
# for keeping them under version control
# for keeping your dotfiles under version control
#
# ~/.tmux.conf:
# >>> source-file $DOTFILES/tmux/tmux.conf


# TODO:
# Bind a respawn key which
#   prompts the user
#   respawns the pane
#   recovers cw
# bind-key -T root 'C-;' command-prompt
#   this will take some doing

unbind-key -a

# {{{ core settings
set-option -g prefix 'C-space'
set-option -g focus-events on
set-option -g default-terminal "screen-256color"
set-option -g history-limit 100000
set-option -g repeat-time 1000
set-option -g mode-keys vi
set-option -g status-keys vi
set-option -g allow-rename off

# }}}
# {{{ mouse settings
set-option -g mouse on
bind-key -T root MouseDrag1Border resize-pane -M
bind-key -T root MouseDown1Status select-window -t =
# this seems to cause an issue on startup
bind-key -T root MouseDown1Pane select-pane -t {mouse} ; send-keys -M
# }}}
# {{{ active/inactive pane colors
set-option -g window-active-style 'fg=colour250,bg=colour234'
set-option -g pane-active-border-style "fg=green,bg=colour234"

set-option -g window-style 'fg=colour247,bg=colour236'
set-option -g pane-border-style "fg=colour247,bg=colour236"
# }}}
# {{{ status bar
set-option -g status-position top
set-option -g status on
# set-option -g status-utf8 on
set-option -g display-time 15000

set-option -g status-left '[#(hostname -s):#S] '

set-option -g status-right "git:#(cd #{pane_current_path}; /Users/abigailgooding/.local/bin/gitstatus) "
set-option -ga status-right "du:#(/Users/abigailgooding/.local/bin/diskusage) "
set-option -ga status-right "batt:#(/Users/abigailgooding/.local/bin/battery) "
set-option -ga status-right "%F %R"

set-option -g status-style "bg=#555555 fg=#CCCCCC"
set-option -g status-left-length 150
set-option -g status-right-length 100

set-option -g window-status-format "#W"
set-option -g window-status-current-format "#W"
set-option -g window-status-current-style "bg=#111111"
setw -g monitor-activity off
set -g visual-activity on

# }}}
# {{{ keybindings

bind-key -T prefix R command-prompt "rename-session '%%'"
bind-key -T prefix r command-prompt "rename-window '%%'"
bind-key -T prefix N command-prompt "new -s '%%' -c '#{pane_current_path}'"
bind-key -T prefix n command-prompt "new-window -n '%%' -c '#{pane_current_path}'"
bind-key -T prefix Q confirm-before -p "kill session #S? (y/n)" kill-session
bind-key -T prefix q confirm-before -p "kill window #W? (y/n)" kill-window
bind-key -T prefix D confirm-before -p "kill server (y/n)?" kill-server
bind-key -T prefix d confirm-before -p "detach session (y/n)?" detach
bind-key -T prefix o confirm-before -p "detach other clients (y/n)?" "attach -d"
bind-key -T prefix O choose-client
bind-key -T prefix s source-file ~/.tmux.conf \; \
                     refresh-client \; \
                     display-message "source-file done"
bind-key -T prefix -r , previous-window
bind-key -T prefix -r . next-window
bind-key -T prefix -r < switch-client -p
bind-key -T prefix -r > switch-client -n
bind-key -T prefix -  split-window    -v -c '#{pane_current_path}'
bind-key -T prefix _  split-window -f -v -c '#{pane_current_path}'
bind-key -T prefix \\ split-window    -h -c '#{pane_current_path}'
bind-key -T prefix |  split-window -f -h -c '#{pane_current_path}'
bind-key -T prefix X confirm-before -p "kill pane? (y/n)" kill-pane
bind-key -T prefix x respawn-pane -k
bind-key -T prefix \; command-prompt
bind-key -T prefix ? list-keys
bind-key -T prefix ] copy-mode
bind-key -T prefix C-space send-prefix
bind-key -T root F11  \
    set prefix None \;\
    set key-table off \;\
    set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
    set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W# #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
    set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
    if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
    refresh-client -S \;\
bind-key -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S


# these should recover the path, though respawn-pane doesn't support the -c option
set-hook -g pane-died "respawn-pane -k"

bind-key -T prefix + select-layout main-vertical\; \
                     resize-pane -t 0 -x 95
bind-key -T prefix z resize-pane -Z

# this requires the vim plugin vim-tmux-navigator to work correctly. without it
# it will let you move from tmux->vim and vim->vim, but not vim->tmux
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# }}}
# {{{ Session centric settings


# set-option -g status-left '#(exec tmux ls | sed 's/:.*//' | tr "\\n" " ")'
# set-option -g window-status-current-format ''
# set-option -g status-left-length 60
# set-option -g status-right '"#{=21:USER}@#H" %H:%M %d-%b-%y'
# set-option -g status-style "bg=black fg=white"

# }}}
# {{{ Window centric settings

# bind-key -T prefix c choose-window


set-option -g remain-on-exit on
set-option -g automatic-rename off

# }}}

# this is supposed to help with italics
# see https://rsapkf.xyz/blog/enabling-italics-vim-tmux
# set -g default-terminal "tmux-256color"
# set -as terminal-overrides ',xterm*:sitm=\E[3m'

